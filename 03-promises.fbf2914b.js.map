{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAiB/B,OAhBgB,IAAIC,SAAQ,SAACC,EAASC,GACpC,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,GACFF,EAAQ,CACNH,SAAU,GAAYS,OAATT,GACbC,MAAO,GAASQ,OAANR,KAGdG,EAAO,CACLJ,SAAU,GAAYS,OAATT,GACbC,MAAO,GAASQ,OAANR,OAEXA,MAKP,IAAMS,EAAqBC,SAASC,cAAc,uBAC5CC,EAAoBF,SAASC,cAAc,sBAC3CE,EAAiBH,SAASC,cAAc,wBACxBD,SAASC,cAAc,SAE/BG,iBAAiB,UAE/B,SAAsBC,GACpB,IAAMC,EAAaC,OAAOR,EAAmBS,OACvCC,EAAYF,OAAOL,EAAkBM,OACrCE,EAASH,OAAOJ,EAAeK,OACrCH,EAAIM,iBAIJ,IAFA,IAAIC,EAAYN,EAEPO,EAAI,EAAGA,GAAKH,EAAQG,GAAK,EAChCzB,EAAcyB,EAAGD,GACdE,MAAK,SAAAC,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MACjB0B,EAAA9B,GAAS+B,OAAOC,QACd,uBAAwCpB,OAAfT,EAAS,QAAYS,OAANR,EAAM,MAC5C,CACA6B,QAAS,IACTC,SAAS,OAIdC,OAAM,SAAAN,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MAClB0B,EAAA9B,GAAS+B,OAAOK,QACd,sBAAqCxB,OAAfT,EAAS,QAAYS,OAANR,EAAM,MAC3C,CACE6B,QAAS,IACTC,SAAS,OAIjBR,EAAYN,EAAaO,EAAIJ,K","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({\n          position: `${position}`,\n          delay: `${delay}`,\n        });\n      }\n      reject({\n        position: `${position}`,\n        delay: `${delay}`,\n      });\n    }, delay);\n  });\n  return promise;\n}\n\nconst firstDelayInputRef = document.querySelector('input[name = delay]');\nconst delayStepInputRef = document.querySelector('input[name = step]');\nconst amountInputRef = document.querySelector('input[name = amount]');\nconst submitFormRef = document.querySelector('.form');\n\nsubmitFormRef.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(evt) {\n  const firstDelay = Number(firstDelayInputRef.value);\n  const delayStep = Number(delayStepInputRef.value);\n  const amount = Number(amountInputRef.value);\n  evt.preventDefault();\n\n  let itemDelay = firstDelay;\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, itemDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`,\n          {\n            timeout: 5000,\n            useIcon: false,\n          }\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`,\n          {\n            timeout: 5000,\n            useIcon: false,\n          }\n        );\n      });\n    itemDelay = firstDelay + i * delayStep;\n  }\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","concat","$ce04d3a99e08e73b$var$firstDelayInputRef","document","querySelector","$ce04d3a99e08e73b$var$delayStepInputRef","$ce04d3a99e08e73b$var$amountInputRef","addEventListener","evt","firstDelay","Number","value","delayStep","amount","preventDefault","itemDelay","i","then","param","$parcel$interopDefault","Notify","success","timeout","useIcon","catch","failure"],"version":3,"file":"03-promises.fbf2914b.js.map"}