{"mappings":"AAAA,IAAuBA,EAAUC,EAoBjCC,QAAQC,KApBeH,EAqBP,EArBiBC,EAqBd,IApBD,IAAIG,SAAQ,CAACC,EAASC,KACpC,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,GACFF,EAAQ,CACNL,SAAU,GAAGA,IACbC,MAAO,GAAGA,MAGdK,EAAO,CACLN,SAAU,GAAGA,IACbC,MAAO,GAAGA,WAGb,MAMAU,MAAK,EAACX,SAAEA,EAAQC,MAAEA,MACjBC,QAAQC,IAAI,uBAAqBH,QAAiBC,UAEnDW,OAAM,EAACZ,SAAEA,EAAQC,MAAEA,MAClBC,QAAQC,IAAI,sBAAoBH,QAAiBC","sources":["src/js/03-promises.js"],"sourcesContent":["function createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({\n          position: `${position}`,\n          delay: `${delay}`,\n        });\n      }\n      reject({\n        position: `${position}`,\n        delay: `${delay}`,\n      });\n    });\n  }, 1000);\n  return promise;\n}\n\nconsole.log(\n  createPromise(1, 5000)\n    .then(({ position, delay }) => {\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    })\n);\n\n// const firstDelayInputRef = document.querySelector('input[name = delay]');\n// const delayStepInputRef = document.querySelector('input[name = step]');\n// const amountInputRef = document.querySelector('input[name = amount]');\n// const submitFormRef = document.querySelector('.form');\n\n// submitFormRef.addEventListener('submit', onFormSubmit);\n\n// function onFormSubmit(evt) {\n//   const firstDelay = Number(firstDelayInputRef.value);\n//   const delayStep = Number(delayStepInputRef.value);\n//   const amount = Number(amountInputRef.value);\n\n//   evt.preventDefault();\n\n//   let itemDelay = firstDelay;\n\n//   for (let i = 1; i <= amount; i += 1) {\n//     createPromise(i, itemDelay)\n//       .then(({ position, delay }) => {\n//         console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//       })\n//       .catch(({ position, delay }) => {\n//         console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//       });\n//     itemDelay = firstDelay + i * delayStep;\n//   }\n// }\n"],"names":["position","delay","console","log","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","then","catch"],"version":3,"file":"03-promises.9a67cb02.js.map"}